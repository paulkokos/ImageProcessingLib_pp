//
// Created by paulkokos on 24/1/2019.
//

#include "../lib/library.cpp"
#include "../lib/library.h"

#include <gtest/gtest.h>


TEST(SquareRootTest, PositiveNos) {
        ASSERT_EQ(6, squareRoot(36.0));
        ASSERT_EQ(18.0, squareRoot(324.0));
        ASSERT_EQ(25.4, squareRoot(645.16));
        ASSERT_EQ(0, squareRoot(0.0));
        ASSERT_EQ(6, squareRoot(36.0));
        ASSERT_EQ(18.0, squareRoot(324.0));
        ASSERT_EQ(25.4, squareRoot(645.16));
        ASSERT_EQ(0, squareRoot(0.0));
        ASSERT_EQ(6, squareRoot(36.0));
        ASSERT_EQ(18.0, squareRoot(324.0));
        ASSERT_EQ(25.4, squareRoot(645.16));
        ASSERT_EQ(0, squareRoot(0.0));
        ASSERT_EQ(6, squareRoot(36.0));
        ASSERT_EQ(18.0, squareRoot(324.0));
        ASSERT_EQ(25.4, squareRoot(645.16));
        ASSERT_EQ(0, squareRoot(0.0));
        ASSERT_EQ(6, squareRoot(36.0));
        ASSERT_EQ(18.0, squareRoot(324.0));
        ASSERT_EQ(25.4, squareRoot(645.16));
        ASSERT_EQ(0, squareRoot(0.0));
        ASSERT_EQ(6, squareRoot(36.0));
        ASSERT_EQ(18.0, squareRoot(324.0));
        ASSERT_EQ(25.4, squareRoot(645.16));
        ASSERT_EQ(0, squareRoot(0.0));
        ASSERT_EQ(6, squareRoot(36.0));
        ASSERT_EQ(18.0, squareRoot(324.0));
        ASSERT_EQ(25.4, squareRoot(645.16));
        ASSERT_EQ(0, squareRoot(0.0));
        ASSERT_EQ(6, squareRoot(36.0));
        ASSERT_EQ(18.0, squareRoot(324.0));
        ASSERT_EQ(25.4, squareRoot(645.16));
        ASSERT_EQ(0, squareRoot(0.0));
        ASSERT_EQ(6, squareRoot(36.0));
        ASSERT_EQ(18.0, squareRoot(324.0));
        ASSERT_EQ(25.4, squareRoot(645.16));
        ASSERT_EQ(0, squareRoot(0.0));
        ASSERT_EQ(6, squareRoot(36.0));
        ASSERT_EQ(18.0, squareRoot(324.0));
        ASSERT_EQ(25.4, squareRoot(645.16));
        ASSERT_EQ(0, squareRoot(0.0));
        ASSERT_EQ(6, squareRoot(36.0));
        ASSERT_EQ(18.0, squareRoot(324.0));
        ASSERT_EQ(25.4, squareRoot(645.16));
        ASSERT_EQ(0, squareRoot(0.0));
        ASSERT_EQ(6, squareRoot(36.0));
        ASSERT_EQ(18.0, squareRoot(324.0));
        ASSERT_EQ(25.4, squareRoot(645.16));
        ASSERT_EQ(0, squareRoot(0.0));
        ASSERT_EQ(6, squareRoot(36.0));
        ASSERT_EQ(18.0, squareRoot(324.0));
        ASSERT_EQ(25.4, squareRoot(645.16));
        ASSERT_EQ(0, squareRoot(0.0));
        ASSERT_EQ(6, squareRoot(36.0));
        ASSERT_EQ(18.0, squareRoot(324.0));
        ASSERT_EQ(25.4, squareRoot(645.16));
        ASSERT_EQ(0, squareRoot(0.0));
        ASSERT_EQ(6, squareRoot(36.0));
        ASSERT_EQ(18.0, squareRoot(324.0));
        ASSERT_EQ(25.4, squareRoot(645.16));
        ASSERT_EQ(0, squareRoot(0.0));
        ASSERT_EQ(6, squareRoot(36.0));
        ASSERT_EQ(18.0, squareRoot(324.0));
        ASSERT_EQ(25.4, squareRoot(645.16));
        ASSERT_EQ(0, squareRoot(0.0));
        ASSERT_EQ(6, squareRoot(36.0));
        ASSERT_EQ(18.0, squareRoot(324.0));
        ASSERT_EQ(25.4, squareRoot(645.16));
        ASSERT_EQ(0, squareRoot(0.0));
        ASSERT_EQ(6, squareRoot(36.0));
        ASSERT_EQ(18.0, squareRoot(324.0));
        ASSERT_EQ(25.4, squareRoot(645.16));
        ASSERT_EQ(0, squareRoot(0.0));
        ASSERT_EQ(6, squareRoot(36.0));
        ASSERT_EQ(18.0, squareRoot(324.0));
        ASSERT_EQ(25.4, squareRoot(645.16));
        ASSERT_EQ(0, squareRoot(0.0));
        ASSERT_EQ(6, squareRoot(36.0));
        ASSERT_EQ(18.0, squareRoot(324.0));
        ASSERT_EQ(25.4, squareRoot(645.16));
        ASSERT_EQ(0, squareRoot(0.0));
        ASSERT_EQ(6, squareRoot(36.0));
        ASSERT_EQ(18.0, squareRoot(324.0));
        ASSERT_EQ(25.4, squareRoot(645.16));
        ASSERT_EQ(0, squareRoot(0.0));
        ASSERT_EQ(6, squareRoot(36.0));
        ASSERT_EQ(18.0, squareRoot(324.0));
        ASSERT_EQ(25.4, squareRoot(645.16));
        ASSERT_EQ(0, squareRoot(0.0));
        ASSERT_EQ(6, squareRoot(36.0));
        ASSERT_EQ(18.0, squareRoot(324.0));
        ASSERT_EQ(25.4, squareRoot(645.16));
        ASSERT_EQ(0, squareRoot(0.0));
        ASSERT_EQ(6, squareRoot(36.0));
        ASSERT_EQ(18.0, squareRoot(324.0));
        ASSERT_EQ(25.4, squareRoot(645.16));
        ASSERT_EQ(0, squareRoot(0.0));
        ASSERT_EQ(6, squareRoot(36.0));
        ASSERT_EQ(18.0, squareRoot(324.0));
        ASSERT_EQ(25.4, squareRoot(645.16));
        ASSERT_EQ(0, squareRoot(0.0));
        ASSERT_EQ(6, squareRoot(36.0));
        ASSERT_EQ(18.0, squareRoot(324.0));
        ASSERT_EQ(25.4, squareRoot(645.16));
        ASSERT_EQ(0, squareRoot(0.0));
        ASSERT_EQ(6, squareRoot(36.0));
        ASSERT_EQ(18.0, squareRoot(324.0));
        ASSERT_EQ(25.4, squareRoot(645.16));
        ASSERT_EQ(0, squareRoot(0.0));
        ASSERT_EQ(6, squareRoot(36.0));
        ASSERT_EQ(18.0, squareRoot(324.0));
        ASSERT_EQ(25.4, squareRoot(645.16));
        ASSERT_EQ(0, squareRoot(0.0));
        ASSERT_EQ(6, squareRoot(36.0));
        ASSERT_EQ(18.0, squareRoot(324.0));
        ASSERT_EQ(25.4, squareRoot(645.16));
        ASSERT_EQ(0, squareRoot(0.0));
        ASSERT_EQ(6, squareRoot(36.0));
        ASSERT_EQ(18.0, squareRoot(324.0));
        ASSERT_EQ(25.4, squareRoot(645.16));
        ASSERT_EQ(0, squareRoot(0.0));
        ASSERT_EQ(6, squareRoot(36.0));
        ASSERT_EQ(18.0, squareRoot(324.0));
        ASSERT_EQ(25.4, squareRoot(645.16));
        ASSERT_EQ(0, squareRoot(0.0));
        ASSERT_EQ(6, squareRoot(36.0));
        ASSERT_EQ(18.0, squareRoot(324.0));
        ASSERT_EQ(25.4, squareRoot(645.16));
        ASSERT_EQ(0, squareRoot(0.0));
        ASSERT_EQ(6, squareRoot(36.0));
        ASSERT_EQ(18.0, squareRoot(324.0));
        ASSERT_EQ(25.4, squareRoot(645.16));
        ASSERT_EQ(0, squareRoot(0.0));
        ASSERT_EQ(6, squareRoot(36.0));
        ASSERT_EQ(18.0, squareRoot(324.0));
        ASSERT_EQ(25.4, squareRoot(645.16));
        ASSERT_EQ(0, squareRoot(0.0));
        ASSERT_EQ(6, squareRoot(36.0));
        ASSERT_EQ(18.0, squareRoot(324.0));
        ASSERT_EQ(25.4, squareRoot(645.16));
        ASSERT_EQ(0, squareRoot(0.0));
        ASSERT_EQ(6, squareRoot(36.0));
        ASSERT_EQ(18.0, squareRoot(324.0));
        ASSERT_EQ(25.4, squareRoot(645.16));
        ASSERT_EQ(0, squareRoot(0.0));
        ASSERT_EQ(6, squareRoot(36.0));
        ASSERT_EQ(18.0, squareRoot(324.0));
        ASSERT_EQ(25.4, squareRoot(645.16));
        ASSERT_EQ(0, squareRoot(0.0));
        ASSERT_EQ(6, squareRoot(36.0));
        ASSERT_EQ(18.0, squareRoot(324.0));
        ASSERT_EQ(25.4, squareRoot(645.16));
        ASSERT_EQ(0, squareRoot(0.0));
        ASSERT_EQ(6, squareRoot(36.0));
        ASSERT_EQ(18.0, squareRoot(324.0));
        ASSERT_EQ(25.4, squareRoot(645.16));
        ASSERT_EQ(0, squareRoot(0.0));
        ASSERT_EQ(6, squareRoot(36.0));
        ASSERT_EQ(18.0, squareRoot(324.0));
        ASSERT_EQ(25.4, squareRoot(645.16));
        ASSERT_EQ(0, squareRoot(0.0));
        ASSERT_EQ(6, squareRoot(36.0));
        ASSERT_EQ(18.0, squareRoot(324.0));
        ASSERT_EQ(25.4, squareRoot(645.16));
        ASSERT_EQ(0, squareRoot(0.0));
        ASSERT_EQ(6, squareRoot(36.0));
        ASSERT_EQ(18.0, squareRoot(324.0));
        ASSERT_EQ(25.4, squareRoot(645.16));
        ASSERT_EQ(0, squareRoot(0.0));
        ASSERT_EQ(6, squareRoot(36.0));
        ASSERT_EQ(18.0, squareRoot(324.0));
        ASSERT_EQ(25.4, squareRoot(645.16));
        ASSERT_EQ(0, squareRoot(0.0));
        ASSERT_EQ(6, squareRoot(36.0));
        ASSERT_EQ(18.0, squareRoot(324.0));
        ASSERT_EQ(25.4, squareRoot(645.16));
        ASSERT_EQ(0, squareRoot(0.0));
        ASSERT_EQ(6, squareRoot(36.0));
        ASSERT_EQ(18.0, squareRoot(324.0));
        ASSERT_EQ(25.4, squareRoot(645.16));
        ASSERT_EQ(0, squareRoot(0.0));
        ASSERT_EQ(6, squareRoot(36.0));
        ASSERT_EQ(18.0, squareRoot(324.0));
        ASSERT_EQ(25.4, squareRoot(645.16));
        ASSERT_EQ(0, squareRoot(0.0));
        ASSERT_EQ(6, squareRoot(36.0));
        ASSERT_EQ(18.0, squareRoot(324.0));
        ASSERT_EQ(25.4, squareRoot(645.16));
        ASSERT_EQ(0, squareRoot(0.0));
        ASSERT_EQ(6, squareRoot(36.0));
        ASSERT_EQ(18.0, squareRoot(324.0));
        ASSERT_EQ(25.4, squareRoot(645.16));
        ASSERT_EQ(0, squareRoot(0.0));
        ASSERT_EQ(6, squareRoot(36.0));
        ASSERT_EQ(18.0, squareRoot(324.0));
        ASSERT_EQ(25.4, squareRoot(645.16));
        ASSERT_EQ(0, squareRoot(0.0));
        ASSERT_EQ(6, squareRoot(36.0));
        ASSERT_EQ(18.0, squareRoot(324.0));
        ASSERT_EQ(25.4, squareRoot(645.16));
        ASSERT_EQ(0, squareRoot(0.0));
        ASSERT_EQ(6, squareRoot(36.0));
        ASSERT_EQ(18.0, squareRoot(324.0));
        ASSERT_EQ(25.4, squareRoot(645.16));
        ASSERT_EQ(0, squareRoot(0.0));
        ASSERT_EQ(6, squareRoot(36.0));
        ASSERT_EQ(18.0, squareRoot(324.0));
        ASSERT_EQ(25.4, squareRoot(645.16));
        ASSERT_EQ(0, squareRoot(0.0));
        ASSERT_EQ(6, squareRoot(36.0));
        ASSERT_EQ(18.0, squareRoot(324.0));
        ASSERT_EQ(25.4, squareRoot(645.16));
        ASSERT_EQ(0, squareRoot(0.0));

}

int main(int argc, char **argv) {
    testing::InitGoogleTest(&argc, argv);
    return RUN_ALL_TESTS();
}